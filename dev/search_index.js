var documenterSearchIndex = {"docs":
[{"location":"uff/#UFF-Ultrasound-File-Format","page":"Ultrasound File Format","title":"UFF - Ultrasound File Format","text":"","category":"section"},{"location":"uff/#Points","page":"Ultrasound File Format","title":"Points","text":"","category":"section"},{"location":"uff/","page":"Ultrasound File Format","title":"Ultrasound File Format","text":"USTB.UFF.Point\nUSTB.UFF.PointFromCartesian\nUSTB.UFF.CartesianFromPoint","category":"page"},{"location":"uff/#USTB.UFF.Point","page":"Ultrasound File Format","title":"USTB.UFF.Point","text":"Point(r, θ, ϕ)\n\nPoint contains the position of a point in a tridimensional space. It express that location in spherical coordinates which allows to place  points at infinity but in a given direction.\n\nThe Julia implementation of the UFF Point type is a derivation of the CoordinateTransformations.jl Spherical type. The UFF Point defines the azimuth θ as the angle from the point location to the YZ plane. The elevation ϕ is the angle from the point location to the XZ plane.\n\n\n\n\n\n","category":"type"},{"location":"uff/#USTB.UFF.PointFromCartesian","page":"Ultrasound File Format","title":"USTB.UFF.PointFromCartesian","text":"(::PointFromCartesian)(x::AbstractVector)\n\nTransformation functor to map 3D Cartesian cordinates into UFFs Point type. The conversion for x y z is given by\n\nbeginaligned\n    r       = sqrtx^2+y^2+z^2  \n    theta = textatan(x z)           \n    phi   = textasin(y r)\nendaligned\n\n\n\n\n\n","category":"type"},{"location":"uff/#USTB.UFF.CartesianFromPoint","page":"Ultrasound File Format","title":"USTB.UFF.CartesianFromPoint","text":"(::CartesianFromPoint)(x::Point)\n\nTransformation functor to map UFF Point into Cartesian coordinates. The conversion for r theta phi is given by\n\nbeginaligned\n    x = rcdotsin(theta)cdotcos(phi) \n    y = rcdotsin(phi)                     \n    z = rcdotcos(theta)cdotcos(phi) \nendaligned\n\n\n\n\n\n","category":"type"},{"location":"uff/#Wavefronts","page":"Ultrasound File Format","title":"Wavefronts","text":"","category":"section"},{"location":"uff/","page":"Ultrasound File Format","title":"Ultrasound File Format","text":"USTB.UFF.Wavefront.WavefrontType","category":"page"},{"location":"uff/#USTB.UFF.Wavefront.WavefrontType","page":"Ultrasound File Format","title":"USTB.UFF.Wavefront.WavefrontType","text":"WavefrontType(x::Integer)\n\nEnumeration for wave types.  Exported through USTB.UFF submodule. Available options are \n\nWavefront Value\nPlane 0\nSpherical 1\nPhotoacustic 2\n\nSee also WAVE\n\nTODO: Cross link WAVE\n\n\n\n\n\n","category":"type"},{"location":"uff/#Windows","page":"Ultrasound File Format","title":"Windows","text":"","category":"section"},{"location":"uff/","page":"Ultrasound File Format","title":"Ultrasound File Format","text":"USTB.UFF.Window.WindowType","category":"page"},{"location":"uff/#USTB.UFF.Window.WindowType","page":"Ultrasound File Format","title":"USTB.UFF.Window.WindowType","text":"WindowType(x::Integer)\n\nEnumeration for window types.  Available options are \n\nWindow Type Value\nNone 0\nBoxcar 1\nFlat 1\nRectangular 1\nHanning 2\nHamming 3\nTukey25 4\nTukey50 5\nTukey75 6\nTukey80 7\nSta 7\nScanline 8\n\nSee also PULSE, BEAM, PHANTOM, PROBE\n\nTODO: Link up PULSE\n\nTODO: Link up BEAM\n\nTODO: Link up PHANTOM\n\nTODO: Link up PROBE\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = USTB","category":"page"},{"location":"#USTB","page":"Home","title":"USTB","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for USTB.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [USTB]","category":"page"}]
}
